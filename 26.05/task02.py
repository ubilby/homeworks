"""Модуль содержит шесть (или две)) функций для перевода числа из десятичной системы
счисления в двоичную, восьмеричную, шестнадцатиричную и наоборот"""

def from10toN(x, n=2, prefix = 0):
    
    """функция принимает число и систему счисления(по-умолчанию, двоичная,
    но не больше шестнадцатиричной), в которую нужно перенести это число
    из десятичной. Возвращает строку (иногда чисел) в указанной системе
    счисления. Для двоичной, восьмиричной и шестнадцатиричной добавляются
    соответствующие префиксы (для этого аргумент prefix нужно задать единицей"""
    
    y = x #создаем локальные переменные, чтобы иметь возможность их изменять
    m = n
    listch = []

    
    while y >= n:   #последовательно делить на число равное размерности 
        listch.append(str(y%m)) #системы счисления до тех пор, пока не 
        y //= m    #останется остаток, меньший этого числа 
    listch.append(str(y)) #создаем список последнего результата деления и остатков от деления
    
    for i, j in enumerate(listch):  #для систем разрядности выше десяти
        if j == "10":               #переименновываем значения
            listch[i] = "a"
        elif j == "11":
            listch[i] = "b"
        elif j == "12":
            listch[i] = "c"
        elif j == "13":
            listch[i] = "d"
        elif j == "14":
            listch[i] = "e"
        elif j == "15":
            listch[i] = "f"
            
    listch = listch[::-1] #развораыиваем полученный список
    if prefix == 1:
        if n == 2: #возвращаем результат с префиксами для распространенных систем
            return "0b" + "".join(listch)
        elif n == 8:
            return "0o" + "".join(listch)
        elif n == 16:
            return "0x" + "".join(listch)
    else:
        return "".join(listch)



def fromNto10(x, n=2, prefix = 0):
    
    """функция принимает число или строку и систему счисления(по-умолчанию
    - двоичную, но не больше шестнадцатиричной), в которую это число
    записано. Возвращает Число в десятичной системе счисления. Для двоичных,
    восьмиричных и шестнадцатиричных систем есть возможность указывать
    значения с соответствующими префиксами, для этого задайте параметр
    prefix = 1 """

    #действуем по обратному алгоритму

    x = str(x)

    if prefix == 1:
        listch = list(x[::-1])
        listch = listch[:-2]
    else:
        listch = list(x[::-1])

    m=int()

    for i, j in enumerate(listch):
        if j == "a":               
            listch[i] = "10"
        elif j == "b":
            listch[i] = "11"
        elif j == "c":
            listch[i] = "12"
        elif j == "d":
            listch[i] = "13"
        elif j == "e":
            listch[i] = "14"
        elif j == "f":
            listch[i] = "15"
            
    for i,j in enumerate(listch):
        m += int(j)*(n**i)
        
    return m
